%% -*- mode: erlang;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et
%% This is a sample rebar.conf file that shows examples of some of rebar's
%% options.

%% == Core ==

%% Extend list of always recursive commands
{recursive_cmds, []}.


%% Additional library directories to add to the code path
{lib_dirs, ["deps"]}.


%% Erlang compiler options
{erl_opts, [debug_info,
            {parse_transform, lager_transform},
            {src_dirs, ["src"]}]}.




%% == Dependencies ==

%% Where to put any downloaded dependencies. Default is "deps"
{deps_dir, ["deps"]}.

%% What dependencies we have, dependencies can be of 3 forms, an application
%% name as an atom, eg. mochiweb, a name and a version (from the .app file), or
%% an application name, a version and the SCM details on how to fetch it (SCM
%% type, location and revision).
%% Rebar currently supports git, hg, bzr, svn, rsync, fossil, and p4.
{deps, [
        {lager, ".*", {git, "https://github.com/basho/lager.git", {tag, "2.1.1"}}},
        {cowboy, ".*", {git, "https://github.com/ninenines/cowboy.git", {branch, "master"}}},
		{emysql, ".*", {git, "https://github.com/Eonblast/Emysql.git", {branch, "master"}}},
        {jsx, ".*", {git, "https://github.com/talentdeficit/jsx.git", {tag, "v2.6.2"}}}
]}.

%% == Subdirectories ==

%% Subdirectories?
{sub_dirs, []}.






